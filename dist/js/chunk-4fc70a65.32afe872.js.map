{"version":3,"sources":["webpack:///./node_modules/es6-promise/dist/es6-promise.js","webpack:///./src/views/home/home.vue?5057","webpack:///./src/views/home/components/bottomTabbar.vue?048e","webpack:///src/views/home/components/bottomTabbar.vue","webpack:///./src/views/home/components/bottomTabbar.vue?2586","webpack:///./src/views/home/components/bottomTabbar.vue","webpack:///./src/config/webSocket.js","webpack:///src/views/home/home.vue","webpack:///./src/views/home/home.vue?a0e6","webpack:///./src/views/home/home.vue","webpack:///./src/views/home/components/bottomTabbar.vue?3793","webpack:///./node_modules/centrifuge/src/centrifuge.js","webpack:///./node_modules/wolfy87-eventemitter/EventEmitter.js","webpack:///./src/views/home/home.vue?c0af","webpack:///./src/api/ktvClerkOrder.js","webpack:///./src/views/home/home.vue?5e23"],"names":["global","factory","module","exports","this","objectOrFunction","x","type","isFunction","_isArray","Array","isArray","Object","prototype","toString","call","len","vertxNext","customSchedulerFn","asap","callback","arg","queue","flush","scheduleFlush","setScheduler","scheduleFn","setAsap","asapFn","browserWindow","window","undefined","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","self","process","isWorker","Uint8ClampedArray","importScripts","MessageChannel","useNextTick","nextTick","useVertxTimer","useSetTimeout","useMutationObserver","iterations","observer","node","document","createTextNode","observe","characterData","data","useMessageChannel","channel","port1","onmessage","port2","postMessage","globalSetTimeout","setTimeout","i","attemptVertx","vertx","Function","require","runOnLoop","runOnContext","e","then","onFulfillment","onRejection","parent","child","constructor","noop","PROMISE_ID","makePromise","_state","arguments","invokeCallback","_result","subscribe","resolve$1","object","Constructor","promise","resolve","Math","random","substring","PENDING","FULFILLED","REJECTED","selfFulfillment","TypeError","cannotReturnOwn","tryThen","then$$1","value","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","error","fulfill","reason","reject","_label","handleOwnThenable","handleMaybeThenable","maybeThenable","publishRejection","_onerror","publish","_subscribers","length","subscribers","settled","detail","hasCallback","succeeded","initializePromise","resolver","id","nextId","validationError","Error","Enumerator","input","_instanceConstructor","_remaining","_enumerate","_eachEntry","entry","c","resolve$$1","_then","didError","_settledAt","Promise$1","_willSettleAt","state","enumerator","all","entries","race","_","reject$1","needsResolver","needsNew","Promise","catch","finally","polyfill","local","P","promiseToString","cast","_setScheduler","_setAsap","_asap","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","keepAliveList","directives","name","rawName","expression","staticRenderFns","activeColor","_l","item","index","key","info","path","scopedSlots","_u","fn","props","active","inactive","_v","_s","text","computed","$store","app","theme","tabBottoms","color","component","WebSocket","Centrifuge","super","subscribeKeys","init","onbeforeunload","disconnect","on","context","console","log","connect","addListeners","hasKey","push","removeListeners","unsubscribe","splice","indexOf","WEBSOCKET","websocket","socketInfomation","res","sign","access_token","timestamp","user","url","wsk","token","_status","components","BottomBar","$route","meta","showBottomTab","transitionName","socketConent","watch","to","from","title","methods","commit","usertype","body","getElementsByTagName","className","ktv_id","userID","content","getUnRead","r","send_data","ktv_id_list","package_status","count","EventEmitter","extend","destination","source","create","fieldValue","mixin","deep","target","objects","result","l","propName","prop","targ","endsWith","suffix","startsWith","prefix","lastIndexOf","stripSlash","isString","String","level","args","logger","apply","backoff","step","min","max","jitter","interval","pow","floor","errorExists","options","_sockJS","_isSockJS","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_subs","_lastMessageID","_messages","_isBatching","_isAuthBatching","_authChannels","_numRefreshFailed","_refreshTimeout","_pingInterval","_pongTimeout","_retries","_callbacks","_latency","_latencyStart","_config","sockJS","retry","maxRetry","timeout","resubscribe","ping","pingInterval","pongWaitTimeout","debug","insecure","server","privateChannelPrefix","onTransportClose","transports","onRefresh","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshTransport","refreshAttempts","refreshInterval","refreshFailed","onPrivateChannelAuth","authEndpoint","authHeaders","authParams","authTransport","configure","F","o","vMember","nStartFrom","nIdx","isFinite","oThis","nLen","_jsonpCallbacks","_jsonpTimeouts","_nextJSONPCallbackID","centrifugeProto","_jsonp","params","headers","keys","_log","_debug","callbackName","script","createElement","timeoutTrigger","clearTimeout","query","hasOwnProperty","encodeURIComponent","callback_name","src","JSON","stringify","head","documentElement","insertBefore","firstChild","_ajax","xhr","XMLHttpRequest","ActiveXObject","headerName","open","withCredentials","setRequestHeader","onreadystatechange","readyState","status","parsed","parse","responseText","send","_websocketSupported","_sockjsEndpoint","replace","_rawWebsocketEndpoint","_configure","configuration","SockJS","_setStatus","newStatus","_isDisconnected","_isConnecting","_isConnected","_nextMessageId","_resetRetry","_getRetryInterval","_clearConnectedState","reconnect","uid","callbacks","errback","_createErrorObject","sub","_isSuccess","_triggerUnsubscribe","_setSubscribing","_setUnsubscribed","_send","messages","_setupTransport","sockjsOptions","onopen","transport","onheartbeat","_restartPing","msg","method","_addMessage","Date","onerror","onclose","closeEvent","needReconnect","advice","event","_disconnect","_connect","_receive","isConnected","shouldReconnect","isDisconnected","trigger","close","_refreshFailed","_refresh","cb","round","toLowerCase","_subscribe","isResubscribe","startAuthBatching","stopAuthBatching","recover","_recover","last","_getLastID","_setNew","_unsubscribe","_getSub","_connectResponse","message","getTime","expires","isExpired","expired","client","wasReconnecting","ttl","startBatching","_shouldResubscribe","stopBatching","latency","_stopPing","clearInterval","_startPing","setInterval","_disconnectResponse","_subscribeResponse","_isSubscribing","_setSubscribeError","_errorObjectFromMessage","reverse","_messageResponse","recovered","_setSubscribeSuccess","_unsubscribeResponse","_publishResponse","_presenceResponse","_historyResponse","_joinResponse","_leaveResponse","_refreshResponse","_dispatchMessage","_flush","slice","_ping","lastUID","err","errObject","_registerCall","getClientId","authChannels","channels","channelsData","channelData","batch","channelResponse","events","currentSub","_setEvents","_isUnsubscribed","Sub","_STATE_NEW","_STATE_SUBSCRIBING","_STATE_SUCCESS","_STATE_ERROR","_STATE_UNSUBSCRIBED","centrifuge","_centrifuge","_error","_isResubscribe","_ready","_promise","_noResubscribe","_initializePromise","subProto","_resolve","_reject","knownEvents","ev","_isNew","_isReady","_isError","successContext","_getSubscribeSuccessContext","errContext","_getSubscribeErrorContext","noResubscribe","subscribeErrorContext","ready","presence","history","proto","originalGlobalValue","indexOfListener","listeners","listener","alias","getListeners","evt","response","_getEvents","RegExp","test","flattenListeners","flatListeners","getListenersAsObject","addListener","listenerIsWrapped","once","addOnceListener","defineEvent","defineEvents","evts","removeListener","off","manipulateListeners","remove","single","multiple","removeEvent","_events","removeAllListeners","emitEvent","listenersMap","_getOnceReturnValue","emit","setOnceReturnValue","_onceReturnValue","noConflict","getOrderList","axios","request","putOrderDeliverStatues","getOrderDetail"],"mappings":"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","file":"js/chunk-4fc70a65.32afe872.js","sourcesContent":["/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.8+1e68dce6\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    var then$$1 = void 0;\n    try {\n      then$$1 = value.then;\n    } catch (error) {\n      reject(promise, error);\n      return;\n    }\n    handleMaybeThenable(promise, value, then$$1);\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = true;\n\n  if (hasCallback) {\n    try {\n      value = callback(detail);\n    } catch (e) {\n      succeeded = false;\n      error = e;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (succeeded === false) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = void 0;\n      var error = void 0;\n      var didError = false;\n      try {\n        _then = entry.then;\n      } catch (e) {\n        didError = true;\n        error = e;\n      }\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        if (didError) {\n          reject(promise, error);\n        } else {\n          handleMaybeThenable(promise, entry, _then);\n        }\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"homeBox\"},[_c('div',{staticClass:\"routerView theme\"},[_c('keep-alive',{attrs:{\"include\":_vm.keepAliveList}},[_c('router-view')],1)],1),_c('BottomBar',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showTab),expression:\"showTab\"}]})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tabBarBox\"},[_c('van-tabbar',{attrs:{\"route\":\"\",\"active-color\":_vm.activeColor,\"inactive-color\":\"#B7B7B7\"}},_vm._l((_vm.dataList),function(item,index){return _c('van-tabbar-item',{key:index,attrs:{\"info\":item.info ? item.info:'',\"to\":item.path},scopedSlots:_vm._u([{key:\"icon\",fn:function(props){return _c('img',{attrs:{\"src\":props.active ? item.active : item.inactive}})}}],null,true)},[_c('span',{staticClass:\"bottonTabText\"},[_vm._v(_vm._s(item.text))])])}),1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"tabBarBox\">\n    <van-tabbar route :active-color=\"activeColor\" inactive-color=\"#B7B7B7\">\n      <van-tabbar-item\n        :info=\"item.info ? item.info:''\"\n        v-for=\"(item, index) in dataList\"\n        :key=\"index\"\n        :to=\"item.path\"\n      >\n        <span class=\"bottonTabText\">{{item.text}}</span>\n        <img slot=\"icon\" slot-scope=\"props\" :src=\"props.active ? item.active : item.inactive\" />\n      </van-tabbar-item>\n    </van-tabbar>\n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    dataList() {\n      return this.$store.state.app.theme.tabBottoms;\n    },\n    activeColor() {\n      return this.$store.state.app.theme.color;\n    }\n  }\n};\n</script>\n\n<style scoped=\"scoped\" lang=\"less\">\n.tabBarBox {\n  height: 50px;\n  .bottonTabText {\n    display: block;\n    transform: scale(0.75);\n    font-size: 14px;\n    font-family: PingFangSC-Semibold, PingFang SC;\n    font-weight: 600;\n  }\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./bottomTabbar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./bottomTabbar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./bottomTabbar.vue?vue&type=template&id=9a8fded8&scoped=true&\"\nimport script from \"./bottomTabbar.vue?vue&type=script&lang=js&\"\nexport * from \"./bottomTabbar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./bottomTabbar.vue?vue&type=style&index=0&id=9a8fded8&scoped=scoped&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9a8fded8\",\n  null\n  \n)\n\nexport default component.exports","import {\n  socketInfomation\n}\nfrom \"@/api/information\";\nimport {\n  wsk\n} from \"@/libs/api.request.js\";\nimport Centrifuge from \"centrifuge\";\nimport {\n  getToken,\n} from '@/libs/util'\n\nclass WebSocket extends Centrifuge {\n\n  constructor(data) {\n    super(data);\n    this.subscribeKeys = [];\n    this.init();\n  }\n\n  init() {\n    window.onbeforeunload = () => {\n      this.disconnect();\n    };\n\n    this.on(\"connect\", context => {\n      console.log(\"连接成功\", context);\n    });\n\n    this.on(\"disconnect\", context => {\n      console.log(\"断开连接\", context);\n    });\n\n    this.on(\"error\", error => {\n      console.log(\"错误连接\", error);\n    });\n\n    this.connect();\n  }\n\n  addListeners(key, callback) {\n    if (!this.hasKey(key)) {\n      this.subscribeKeys.push(key);\n    }\n    this.subscribe(key, callback);\n  }\n\n  removeListeners(key, callback) {\n    if (!this.hasKey(key)) return;\n    this.unsubscribe(key);\n    this.subscribeKeys.splice(this.subscribeKeys.indexOf(key), 1);\n  }\n\n  hasKey(key) {\n    return this.subscribeKeys.indexOf(key) > -1 ? true : false;\n  }\n\n}\n\nlet WEBSOCKET = null;\n\nexport const websocket = () => {\n  return new Promise((resolve, reject) => {\n    if (WEBSOCKET == null) {\n      socketInfomation().then(res => {\n\n        const sign = res.data.data.access_token; // 签名： 后端根据secret、user、timestamp等，通过hashmap、二进制流、sha256换算得到\n        const timestamp = res.data.data.timestamp; // 时间戳\n        const user = res.data.data.user; // 当前登录用户id\n        WEBSOCKET = new WebSocket({\n          url: wsk,\n          user: user,\n          timestamp: timestamp,\n          token: sign\n        })\n        resolve(WEBSOCKET);\n      })\n    } else {\n      if (WEBSOCKET._status == 'disconnected') {\n        WEBSOCKET.connect();\n      }\n      resolve(WEBSOCKET);\n    }\n  })\n}\n","<template>\n  <div class=\"homeBox\">\n    <div class=\"routerView theme\">\n      <keep-alive :include=\"keepAliveList\">\n        <router-view></router-view>\n      </keep-alive>\n    </div>\n    <BottomBar v-show=\"showTab\" />\n  </div>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nimport BottomBar from \"./components/bottomTabbar\";\nimport { websocket } from \"@/config/webSocket\";\nimport { getOrderList } from \"@/api/ktvClerkOrder.js\";\nexport default {\n  components: {\n    BottomBar\n  },\n  computed: {\n    keepAliveList() {\n      return this.$store.state.app.keepAliveList;\n    },\n    showTab() {\n      if (this.$route.meta && this.$route.meta.showBottomTab) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  },\n  data() {\n    return {\n      transitionName: \"slide-none\",\n      socketConent: null\n    };\n  },\n  watch: {\n    $route(to, from) {\n      document.title = to.meta.title;\n   //    const toDepth = to.path.split(\"/\").length;\n   //    const fromDepth = from.path.split(\"/\").length;\n\t\t\t// console.log(to);\n   //    if (toDepth == fromDepth) {\n   //      this.transitionName = \"slide-none\";\n   //    } else if (toDepth < fromDepth) {\n   //      this.transitionName = \"slide-right\";\n   //    } else {\n   //      this.transitionName = \"slide-left\";\n   //    }\n    }\n  },\n  methods: {\n    ...mapActions([\"getUnRead\"])\n  },\n  created() {\n    this.$store.commit(\"SET_THEME\", this.$store.state.user.usertype);\n  },\n  mounted() {\n    let body = document.getElementsByTagName(\"body\")[0];\n    body.className = this.$store.state.app.className;\n    // 设置websocket,\n    let ktv_id = this.$store.state.user.ktv_id;\n    let userID = this.$store.state.user.userID;\n    let usertype = this.$store.state.user.usertype;\n    websocket().then(content => {\n      this.socketConent = content;\n      if (usertype == \"ktv_clerk\") {\n        content.addListeners(`package:${ktv_id}`, res => {\n          let send_data = {\n            ktv_id_list: ktv_id,\n            package_status: 2\n          };\n          getOrderList(send_data).then(res => {\n            this.$store.commit(\"setUndelivered\", res.data.count);\n          });\n        });\n        return;\n      }\n      this.getUnRead();\n      content.addListeners(`msg:${userID}`, r => {\n        this.getUnRead();\n      });\n    });\n  },\n  destroyed() {\n    let body = document.getElementsByTagName(\"body\")[0];\n    body.className = \"themea\";\n    if (this.socketConent != null) {\n      this.socketConent.disconnect();\n    }\n  }\n};\n</script>\n<style lang=\"less\">\n@import \"../../static/style/theme.less\";\n\n.themea {\n  .theme(); //默认的样式\n}\n\n.themeb {\n  .theme(\n    #2accdd,\n    linear-gradient(\n      180deg,\n      rgba(24, 223, 208, 1) 0%,\n      rgba(29, 180, 213, 1) 100%\n    ),\n    url(\"../../assets/banner2.png\")\n  );\n}\n</style>\n<style scoped=\"scoped\" lang=\"less\">\n.homeBox {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background: #f6f6f6;\n\n  .routerView {\n    flex: 1;\n    overflow: auto;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./home.vue?vue&type=template&id=6285e9c8&scoped=true&\"\nimport script from \"./home.vue?vue&type=script&lang=js&\"\nexport * from \"./home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./home.vue?vue&type=style&index=0&lang=less&\"\nimport style1 from \"./home.vue?vue&type=style&index=1&id=6285e9c8&scoped=scoped&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6285e9c8\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./bottomTabbar.vue?vue&type=style&index=0&id=9a8fded8&scoped=scoped&lang=less&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./bottomTabbar.vue?vue&type=style&index=0&id=9a8fded8&scoped=scoped&lang=less&\"","var Promise = require('es6-promise').Promise;\nvar EventEmitter = require('wolfy87-eventemitter');\n\n/**\n * Oliver Caldwell\n * http://oli.me.uk/2013/06/01/prototypical-inheritance-done-right/\n */\nif (!Object.create) {\n    Object.create = (function () {\n        var F = function () {\n        };\n        return function (o) {\n            if (arguments.length !== 1) {\n                throw new Error('Object.create implementation only accepts one parameter.');\n            }\n            F.prototype = o;\n            return new F();\n        }\n    })()\n}\n\nfunction extend(destination, source) {\n    destination.prototype = Object.create(source.prototype);\n    destination.prototype.constructor = destination;\n    return source.prototype;\n}\n\n/**\n * Array.prototype.indexOf polyfill from\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n */\nif (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (vMember, nStartFrom) {\n        /*\n        In non-strict mode, if the `this` variable is null or undefined, then it is\n        set the window object. Otherwise, `this` is automaticly converted to an\n        object. In strict mode if the `this` variable is null or undefined a\n        `TypeError` is thrown.\n        */\n        if (!this) {\n            throw new TypeError('Array.prototype.indexOf() - can not convert \"' + this + '\" to object');\n        }\n        var nIdx = isFinite(nStartFrom) ? Math.floor(nStartFrom) : 0,\n            oThis = this instanceof Object ? this : new Object(this),\n            nLen = isFinite(oThis.length) ? Math.floor(oThis.length) : 0;\n        if (nIdx >= nLen) {\n            return -1;\n        }\n        if (nIdx < 0) {\n            nIdx = Math.max(nLen + nIdx, 0);\n        }\n        if (vMember === undefined) {\n            /*\n            Since `vMember` is undefined, keys that don't exist will have the same\n            value as `vMember`, and thus do need to be checked.\n            */\n            do {\n                if (nIdx in oThis && oThis[nIdx] === undefined) {\n                    return nIdx;\n                }\n            } while (++nIdx < nLen);\n        } else {\n            do {\n                if (oThis[nIdx] === vMember) {\n                    return nIdx;\n                }\n            } while (++nIdx < nLen);\n        }\n        return -1;\n    };\n}\n\nfunction fieldValue(object, name) {\n    try {\n        return object[name];\n    } catch (x) {\n        return undefined;\n    }\n}\n\n/**\n * Mixes in the given objects into the target object by copying the properties.\n * @param deep if the copy must be deep\n * @param target the target object\n * @param objects the objects whose properties are copied into the target\n */\nfunction mixin(deep, target, objects) {\n    var result = target || {};\n    for (var i = 2, l = arguments.length; i < l; i++) { // Skip first 2 parameters (deep and target), and loop over the others\n        var object = arguments[i];\n        if (object === undefined || object === null) {\n            continue;\n        }\n        for (var propName in object) {\n            var prop = fieldValue(object, propName);\n            var targ = fieldValue(result, propName);\n            if (prop === target) {\n                continue; // Avoid infinite loops\n            }\n            if (prop === undefined) {\n                continue; // Do not mixin undefined values\n            }\n            if (deep && typeof prop === 'object' && prop !== null) {\n                if (prop instanceof Array) {\n                    result[propName] = mixin(deep, targ instanceof Array ? targ : [], prop);\n                } else {\n                    var source = typeof targ === 'object' && !(targ instanceof Array) ? targ : {};\n                    result[propName] = mixin(deep, source, prop);\n                }\n            } else {\n                result[propName] = prop;\n            }\n        }\n    }\n    return result;\n}\n\nfunction endsWith(value, suffix) {\n    return value.indexOf(suffix, value.length - suffix.length) !== -1;\n}\n\nfunction startsWith(value, prefix) {\n    return value.lastIndexOf(prefix, 0) === 0;\n}\n\nfunction stripSlash(value) {\n    if (value.substring(value.length - 1) === '/') {\n        value = value.substring(0, value.length - 1);\n    }\n    return value;\n}\n\nfunction isString(value) {\n    if (value === undefined || value === null) {\n        return false;\n    }\n    return typeof value === 'string' || value instanceof String;\n}\n\nfunction isArray(value) {\n    return Object.prototype.toString.call(value) === Object.prototype.toString.call([]);\n}\n\nfunction isFunction(value) {\n    if (value === undefined || value === null) {\n        return false;\n    }\n    return typeof value === 'function';\n}\n\nfunction log(level, args) {\n    if (global.console) {\n        var logger = global.console[level];\n        if (isFunction(logger)) {\n            logger.apply(global.console, args);\n        }\n    }\n}\n\nfunction backoff(step, min, max) {\n    var jitter = 0.5 * Math.random();\n    var interval = min * Math.pow(2, step + 1);\n    if (interval > max) {\n        interval = max;\n    }\n    return Math.floor((1 - jitter) * interval);\n}\n\nfunction errorExists(data) {\n    return 'error' in data && data.error !== null && data.error !== '';\n}\n\nfunction Centrifuge(options) {\n    this._sockJS = null;\n    this._isSockJS = false;\n    this._status = 'disconnected';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._subs = {};\n    this._lastMessageID = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isAuthBatching = false;\n    this._authChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingInterval = null;\n    this._pongTimeout = null;\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._config = {\n        sockJS: null,\n        retry: 1000,\n        maxRetry: 20000,\n        timeout: 5000,\n        info: '',\n        resubscribe: true,\n        ping: true,\n        pingInterval: 30000,\n        pongWaitTimeout: 5000,\n        debug: false,\n        insecure: false,\n        server: null,\n        privateChannelPrefix: '$',\n        onTransportClose: null,\n        transports: [\n            'websocket',\n            'xdr-streaming',\n            'xhr-streaming',\n            'eventsource',\n            'iframe-eventsource',\n            'iframe-htmlfile',\n            'xdr-polling',\n            'xhr-polling',\n            'iframe-xhr-polling',\n            'jsonp-polling'\n        ],\n        onRefresh: null,\n        refreshEndpoint: '/centrifuge/refresh/',\n        refreshHeaders: {},\n        refreshParams: {},\n        refreshData: {},\n        refreshTransport: 'ajax',\n        refreshAttempts: null,\n        refreshInterval: 3000,\n        refreshFailed: null,\n        onPrivateChannelAuth: null,\n        authEndpoint: '/centrifuge/auth/',\n        authHeaders: {},\n        authParams: {},\n        authTransport: 'ajax'\n    };\n    if (options) {\n        this.configure(options);\n    }\n}\n\nextend(Centrifuge, EventEmitter);\n\nCentrifuge._jsonpCallbacks = {};\nCentrifuge._jsonpTimeouts = {};\nCentrifuge._nextJSONPCallbackID = 1;\n\nvar centrifugeProto = Centrifuge.prototype;\n\ncentrifugeProto._jsonp = function (url, params, headers, data, callback) {\n    if (Object.keys(headers).length > 0) {\n        this._log('Only AJAX request allows to send custom headers, it is not possible with JSONP.');\n    }\n    this._debug('sending JSONP request to', url);\n\n    var callbackName = 'centrifuge_jsonp_' + Centrifuge._nextJSONPCallbackID.toString();\n    Centrifuge._nextJSONPCallbackID++;\n\n    var document = global.document;\n    var script = document.createElement('script');\n\n    var timeoutTrigger = setTimeout(function () {\n        Centrifuge._jsonpCallbacks[callbackName] = function () {\n        };\n        callback(true, 'timeout');\n    }, 3000);\n\n    Centrifuge._jsonpCallbacks[callbackName] = function (data) {\n        clearTimeout(timeoutTrigger);\n        callback(false, data);\n        delete Centrifuge._jsonpCallbacks[callbackName];\n    };\n\n    var query = '';\n    for (var i in params) {\n        if (params.hasOwnProperty(i)) {\n            if (query.length > 0) {\n                query += '&';\n            }\n            query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n        }\n    }\n\n    var callback_name = 'Centrifuge._jsonpCallbacks[\\'' + callbackName + '\\']';\n    script.src = this._config.authEndpoint +\n        '?callback=' + encodeURIComponent(callback_name) +\n        '&data=' + encodeURIComponent(JSON.stringify(data)) +\n        '&' + query;\n\n    var head = document.getElementsByTagName('head')[0] || document.documentElement;\n    head.insertBefore(script, head.firstChild);\n};\n\ncentrifugeProto._ajax = function (url, params, headers, data, callback) {\n    var self = this;\n    self._debug('sending AJAX request to', url);\n\n    var xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP'));\n\n    var query = '';\n    for (var i in params) {\n        if (params.hasOwnProperty(i)) {\n            if (query.length > 0) {\n                query += '&';\n            }\n            query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n        }\n    }\n    if (query.length > 0) {\n        query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n        xhr.withCredentials = true;\n    }\n\n    // add request headers\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (var headerName in headers) {\n        if (headers.hasOwnProperty(headerName)) {\n            xhr.setRequestHeader(headerName, headers[headerName]);\n        }\n    }\n\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n                var data, parsed = false;\n                try {\n                    data = JSON.parse(xhr.responseText);\n                    parsed = true;\n                } catch (e) {\n                    callback(true, 'JSON returned was invalid, yet status code was 200. Data was: ' + xhr.responseText);\n                }\n                if (parsed) { // prevents double execution.\n                    callback(false, data);\n                }\n            } else {\n                self._log(\"Couldn't get auth info from application\", xhr.status);\n                callback(true, xhr.status);\n            }\n        }\n    };\n\n    setTimeout(function () {\n        xhr.send(JSON.stringify(data));\n    }, 20);\n    return xhr;\n};\n\ncentrifugeProto._log = function () {\n    log('info', arguments);\n};\n\ncentrifugeProto._debug = function () {\n    if (this._config.debug === true) {\n        log('debug', arguments);\n    }\n};\n\ncentrifugeProto._websocketSupported = function () {\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object')\n};\n\ncentrifugeProto._sockjsEndpoint = function () {\n    var url = this._config.url;\n    url = url\n        .replace('ws://', 'http://')\n        .replace('wss://', 'https://');\n    url = stripSlash(url);\n    if (!endsWith(this._config.url, 'connection')) {\n        url = url + '/connection';\n    }\n    return url;\n};\n\ncentrifugeProto._rawWebsocketEndpoint = function () {\n    var url = this._config.url;\n    url = url\n        .replace('http://', 'ws://')\n        .replace('https://', 'wss://');\n    url = stripSlash(url);\n    if (!endsWith(this._config.url, 'connection/websocket')) {\n        url = url + '/connection/websocket';\n    }\n    return url;\n};\n\ncentrifugeProto._configure = function (configuration) {\n    this._debug('Configuring centrifuge object with', configuration);\n\n    if (!configuration) {\n        configuration = {};\n    }\n\n    this._config = mixin(false, this._config, configuration);\n\n    if (!this._config.url) {\n        throw 'Missing required configuration parameter \\'url\\' specifying server URL';\n    }\n\n    if (!this._config.user && this._config.user !== '') {\n        if (!this._config.insecure) {\n            throw 'Missing required configuration parameter \\'user\\' specifying user\\'s unique ID in your application';\n        } else {\n            this._debug('user not found but this is OK for insecure mode - anonymous access will be used');\n            this._config.user = '';\n        }\n    }\n\n    if (!this._config.timestamp) {\n        if (!this._config.insecure) {\n            throw 'Missing required configuration parameter \\'timestamp\\'';\n        } else {\n            this._debug('token not found but this is OK for insecure mode');\n        }\n    }\n\n    if (!this._config.token) {\n        if (!this._config.insecure) {\n            throw 'Missing required configuration parameter \\'token\\' specifying the sign of authorization request';\n        } else {\n            this._debug('timestamp not found but this is OK for insecure mode');\n        }\n    }\n\n    this._config.url = stripSlash(this._config.url);\n\n    if (endsWith(this._config.url, 'connection')) {\n        this._debug('client will connect to SockJS endpoint');\n        if (this._config.sockJS !== null) {\n            this._debug('SockJS explicitly provided in options');\n            this._sockJS = this._config.sockJS;\n        } else {\n            if (typeof SockJS === 'undefined') {\n                throw 'include SockJS client library before Centrifuge javascript client library or provide SockJS object in options or use raw Websocket connection endpoint';\n            }\n            this._debug('use globally defined SockJS');\n            this._sockJS = SockJS;\n        }\n    } else if (endsWith(this._config.url, 'connection/websocket')) {\n        this._debug('client will connect to raw Websocket endpoint');\n    } else {\n        this._debug('client will detect connection endpoint itself');\n        if (this._config.sockJS !== null) {\n            this._debug('SockJS explicitly provided in options');\n            this._sockJS = this._config.sockJS;\n        } else {\n            if (typeof SockJS === 'undefined') {\n                this._debug('SockJS not found');\n            } else {\n                this._debug('use globally defined SockJS');\n                this._sockJS = SockJS;\n            }\n        }\n    }\n};\n\ncentrifugeProto._setStatus = function (newStatus) {\n    if (this._status !== newStatus) {\n        this._debug('Status', this._status, '->', newStatus);\n        this._status = newStatus;\n    }\n};\n\ncentrifugeProto._isDisconnected = function () {\n    return this._status === 'disconnected';\n};\n\ncentrifugeProto._isConnecting = function () {\n    return this._status === 'connecting';\n};\n\ncentrifugeProto._isConnected = function () {\n    return this._status === 'connected';\n};\n\ncentrifugeProto._nextMessageId = function () {\n    return ++this._messageId;\n};\n\ncentrifugeProto._resetRetry = function () {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n};\n\ncentrifugeProto._getRetryInterval = function () {\n    var interval = backoff(this._retries, this._config.retry, this._config.maxRetry);\n    this._retries += 1;\n    return interval;\n};\n\ncentrifugeProto._clearConnectedState = function (reconnect) {\n    this._clientID = null;\n\n    // fire errbacks of registered calls.\n    for (var uid in this._callbacks) {\n        if (this._callbacks.hasOwnProperty(uid)) {\n            var callbacks = this._callbacks[uid];\n            var errback = callbacks.errback;\n            if (!errback) {\n                continue;\n            }\n            errback(this._createErrorObject('disconnected', 'retry'));\n        }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (var channel in this._subs) {\n        if (this._subs.hasOwnProperty(channel)) {\n            var sub = this._subs[channel];\n            if (reconnect) {\n                if (sub._isSuccess()) {\n                    sub._triggerUnsubscribe();\n                }\n                sub._setSubscribing();\n            } else {\n                sub._setUnsubscribed();\n            }\n        }\n    }\n\n    if (!this._config.resubscribe || !this._reconnect) {\n        // completely clear connected state\n        this._subs = {};\n    }\n};\n\ncentrifugeProto._send = function (messages) {\n    if (messages.length === 0) {\n        return;\n    }\n    if (messages.length === 1) {\n        // small optimization to send single object to server to reduce allocations required\n        // to parse array compared to parse single object client request.\n        messages = messages[0];\n    }\n    this._debug('Send', messages);\n    this._transport.send(JSON.stringify(messages));\n};\n\ncentrifugeProto._setupTransport = function () {\n\n    var self = this;\n\n    this._isSockJS = false;\n\n    // detect transport to use - SockJS or raw Websocket\n    if (this._sockJS !== null) {\n        var sockjsOptions = {\n            transports: this._config.transports\n        };\n        if (this._config.server !== null) {\n            sockjsOptions.server = this._config.server;\n        }\n        this._isSockJS = true;\n        this._transport = new this._sockJS(this._sockjsEndpoint(), null, sockjsOptions);\n    } else {\n        if (!this._websocketSupported()) {\n            this._debug('No Websocket support and no SockJS configured, can not connect');\n            return;\n        }\n        this._transport = new WebSocket(this._rawWebsocketEndpoint());\n    }\n\n    this._transport.onopen = function () {\n        self._transportClosed = false;\n\n        if (self._isSockJS) {\n            self._transportName = self._transport.transport;\n            self._transport.onheartbeat = function () {\n                self._restartPing();\n            };\n        } else {\n            self._transportName = 'raw-websocket';\n        }\n\n        self._resetRetry();\n\n        if (!isString(self._config.user)) {\n            self._log('user expected to be string');\n        }\n        if (!isString(self._config.info)) {\n            self._log('info expected to be string');\n        }\n\n        var msg = {\n            method: 'connect',\n            params: {\n                user: self._config.user,\n                info: self._config.info\n            }\n        };\n\n        if (!self._config.insecure) {\n            // in insecure client mode we don't need timestamp and token.\n            msg.params.timestamp = self._config.timestamp;\n            msg.params.token = self._config.token;\n            if (!isString(self._config.timestamp)) {\n                self._log('timestamp expected to be string');\n            }\n            if (!isString(self._config.token)) {\n                self._log('token expected to be string');\n            }\n        }\n        self._addMessage(msg);\n        self._latencyStart = new Date();\n    };\n\n    this._transport.onerror = function (error) {\n        self._debug('transport level error', error);\n    };\n\n    this._transport.onclose = function (closeEvent) {\n        self._transportClosed = true;\n        var reason = 'connection closed';\n        var needReconnect = true;\n        if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n            try {\n                var advice = JSON.parse(closeEvent.reason);\n                self._debug('reason is an advice object', advice);\n                reason = advice.reason;\n                needReconnect = advice.reconnect;\n            } catch (e) {\n                reason = closeEvent.reason;\n                self._debug('reason is a plain string', reason);\n                needReconnect = reason !== 'disconnect';\n            }\n        }\n\n        // onTransportClose callback should be executed every time transport was closed.\n        // This can be helpful to catch failed connection events (because our disconnect\n        // event only called once and every future attempts to connect do not fire disconnect\n        // event again).\n        if (self._config.onTransportClose !== null) {\n            self._config.onTransportClose({\n                event: closeEvent,\n                reason: reason,\n                reconnect: needReconnect\n            });\n        }\n\n        self._disconnect(reason, needReconnect);\n\n        if (self._reconnect === true) {\n            self._reconnecting = true;\n            var interval = self._getRetryInterval();\n            self._debug('reconnect after ' + interval + ' milliseconds');\n            setTimeout(function () {\n                if (self._reconnect === true) {\n                    self._connect.call(self);\n                }\n            }, interval);\n        }\n\n    };\n\n    this._transport.onmessage = function (event) {\n        var data;\n        data = JSON.parse(event.data);\n        self._debug('Received', data);\n        self._receive(data);\n        self._restartPing();\n    };\n};\n\ncentrifugeProto._connect = function (callback) {\n\n    if (this.isConnected()) {\n        this._debug('connect called when already connected');\n        return;\n    }\n\n    if (this._status === 'connecting') {\n        return;\n    }\n\n    this._debug('start connecting');\n\n    this._setStatus('connecting');\n\n    this._clientID = null;\n    this._reconnect = true;\n\n    if (callback) {\n        this.on('connect', callback);\n    }\n\n    this._setupTransport();\n};\n\ncentrifugeProto._disconnect = function (reason, shouldReconnect) {\n\n    if (this.isDisconnected()) {\n        return;\n    }\n\n    this._debug('disconnected:', reason, shouldReconnect);\n\n    var reconnect = shouldReconnect || false;\n    if (reconnect === false) {\n        this._reconnect = false;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    if (!this.isDisconnected()) {\n        this._setStatus('disconnected');\n        if (this._refreshTimeout) {\n            clearTimeout(this._refreshTimeout);\n        }\n        if (this._reconnecting === false) {\n            this.trigger('disconnect', [{\n                reason: reason,\n                reconnect: reconnect\n            }]);\n        }\n    }\n\n    if (!this._transportClosed) {\n        this._transport.close();\n    }\n};\n\ncentrifugeProto._refreshFailed = function () {\n    this._numRefreshFailed = 0;\n    if (!this.isDisconnected()) {\n        this._disconnect('refresh failed', false);\n    }\n    if (this._config.refreshFailed !== null) {\n        this._config.refreshFailed();\n    }\n};\n\ncentrifugeProto._refresh = function () {\n    // ask web app for connection parameters - user ID,\n    // timestamp, info and token\n    var self = this;\n    this._debug('refresh credentials');\n\n    if (self._config.refreshAttempts === 0) {\n        this._debug('refresh attempts set to 0, do not send refresh request at all');\n        self._refreshFailed();\n        return;\n    }\n\n    if (self._refreshTimeout !== null) {\n        clearTimeout(self._refreshTimeout);\n    }\n\n    var cb = function (error, data) {\n        if (error === true) {\n            // We don't perform any connection status related actions here as we are\n            // relying on Centrifugo that must close connection eventually.\n            self._debug('error getting connection credentials from refresh endpoint', data);\n            self._numRefreshFailed++;\n            if (self._refreshTimeout) {\n                clearTimeout(self._refreshTimeout);\n            }\n            if (self._config.refreshAttempts !== null && self._numRefreshFailed >= self._config.refreshAttempts) {\n                self._refreshFailed();\n                return;\n            }\n            self._refreshTimeout = setTimeout(function () {\n                self._refresh.call(self);\n            }, self._config.refreshInterval + Math.round(Math.random() * 1000));\n            return;\n        }\n        self._numRefreshFailed = 0;\n        self._config.user = data.user;\n        self._config.timestamp = data.timestamp;\n        if ('info' in data) {\n            self._config.info = data.info;\n        }\n        self._config.token = data.token;\n        if (self.isDisconnected()) {\n            self._debug('credentials refreshed, connect from scratch');\n            self._connect();\n        } else {\n            self._debug('send refreshed credentials');\n            self._addMessage({\n                method: 'refresh',\n                params: {\n                    user: self._config.user,\n                    timestamp: self._config.timestamp,\n                    info: self._config.info,\n                    token: self._config.token\n                }\n            });\n        }\n    };\n\n    if (this._config.onRefresh !== null) {\n        var context = {};\n        this._config.onRefresh(context, cb);\n    } else {\n        var transport = this._config.refreshTransport.toLowerCase();\n        if (transport === 'ajax') {\n            this._ajax(this._config.refreshEndpoint, this._config.refreshParams, this._config.refreshHeaders, this._config.refreshData, cb);\n        } else if (transport === 'jsonp') {\n            this._jsonp(this._config.refreshEndpoint, this._config.refreshParams, this._config.refreshHeaders, this._config.refreshData, cb);\n        } else {\n            throw 'Unknown refresh transport ' + transport;\n        }\n    }\n};\n\ncentrifugeProto._subscribe = function (sub, isResubscribe) {\n\n    var channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n        this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n        // subscribe will be called later\n        sub._setNew();\n        return;\n    }\n\n    sub._setSubscribing(isResubscribe);\n\n    var msg = {\n        method: 'subscribe',\n        params: {\n            channel: channel\n        }\n    };\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n        // private channel\n        if (this._isAuthBatching) {\n            this._authChannels[channel] = true;\n        } else {\n            this.startAuthBatching();\n            this._subscribe(sub);\n            this.stopAuthBatching();\n        }\n    } else {\n        var recover = this._recover(channel);\n        if (recover === true) {\n            msg.params.recover = true;\n            msg.params.last = this._getLastID(channel);\n        }\n        this._addMessage(msg);\n    }\n};\n\ncentrifugeProto._unsubscribe = function (sub) {\n    if (this.isConnected()) {\n        // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n        this._addMessage({\n            method: 'unsubscribe',\n            params: {\n                channel: sub.channel\n            }\n        });\n    }\n};\n\ncentrifugeProto._getSub = function (channel) {\n    var sub = this._subs[channel];\n    if (!sub) {\n        return null;\n    }\n    return sub;\n};\n\ncentrifugeProto._connectResponse = function (message) {\n    if (this.isConnected()) {\n        return;\n    }\n\n    if (!errorExists(message)) {\n\n        if (this._latencyStart !== null) {\n            this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n            this._latencyStart = null;\n        }\n\n        if (!message.body) {\n            return;\n        }\n        if (message.body.expires) {\n            var isExpired = message.body.expired;\n            if (isExpired) {\n                this._reconnecting = true;\n                this._disconnect('expired', true);\n                this._refresh();\n                return;\n            }\n        }\n        this._clientID = message.body.client;\n        this._setStatus('connected');\n        var wasReconnecting = this._reconnecting;\n        this._reconnecting = false;\n\n        if (this._refreshTimeout) {\n            clearTimeout(this._refreshTimeout);\n        }\n\n        var self = this;\n\n        if (message.body.expires) {\n            this._refreshTimeout = setTimeout(function () {\n                self._refresh.call(self);\n            }, message.body.ttl * 1000);\n        }\n\n        if (this._config.resubscribe) {\n            this.startBatching();\n            this.startAuthBatching();\n            for (var channel in this._subs) {\n                if (this._subs.hasOwnProperty(channel)) {\n                    var sub = this._subs[channel];\n                    if (sub._shouldResubscribe()) {\n                        this._subscribe(sub, wasReconnecting);\n                    }\n                }\n            }\n            this.stopAuthBatching();\n            this.stopBatching(true);\n        }\n\n        this._restartPing();\n        this.trigger('connect', [{\n            client: message.body.client,\n            transport: this._transportName,\n            latency: this._latency\n        }]);\n    } else {\n        this.trigger('error', [{\n            message: message\n        }]);\n    }\n};\n\ncentrifugeProto._stopPing = function () {\n    if (this._pongTimeout !== null) {\n        clearTimeout(this._pongTimeout);\n        this._pongTimeout = null;\n    }\n    if (this._pingInterval !== null) {\n        clearInterval(this._pingInterval);\n        this._pingInterval = null;\n    }\n};\n\ncentrifugeProto._startPing = function () {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n        return;\n    }\n    if (!this.isConnected()) {\n        return;\n    }\n\n    var self = this;\n\n    this._pingInterval = setInterval(function () {\n        if (!self.isConnected()) {\n            self._stopPing();\n            return;\n        }\n        self.ping();\n        self._pongTimeout = setTimeout(function () {\n            self._disconnect('no ping', true);\n        }, self._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n};\n\ncentrifugeProto._restartPing = function () {\n    this._stopPing();\n    this._startPing();\n};\n\ncentrifugeProto._disconnectResponse = function (message) {\n    if (!errorExists(message)) {\n        var shouldReconnect = false;\n        if ('reconnect' in message.body) {\n            shouldReconnect = message.body.reconnect;\n        }\n        var reason = '';\n        if ('reason' in message.body) {\n            reason = message.body.reason;\n        }\n        this._disconnect(reason, shouldReconnect);\n    } else {\n        this.trigger('error', [{\n            message: message\n        }]);\n    }\n};\n\ncentrifugeProto._subscribeResponse = function (message) {\n    var body = message.body;\n    if (body === null) {\n        return;\n    }\n    var channel = body.channel;\n\n    var sub = this._getSub(channel);\n    if (!sub) {\n        return;\n    }\n\n    if (!sub._isSubscribing()) {\n        return;\n    }\n\n    if (!errorExists(message)) {\n        var messages = body.messages;\n        if (messages && messages.length > 0) {\n            // handle missed messages\n            messages = messages.reverse();\n            for (var i in messages) {\n                if (messages.hasOwnProperty(i)) {\n                    this._messageResponse({\n                        body: messages[i]\n                    });\n                }\n            }\n        } else {\n            if ('last' in body) {\n                // no missed messages found so set last message id from body.\n                this._lastMessageID[channel] = body.last;\n            }\n        }\n        var recovered = false;\n        if ('recovered' in body) {\n            recovered = body.recovered;\n        }\n        sub._setSubscribeSuccess(recovered);\n    } else {\n        this.trigger('error', [{\n            message: message\n        }]);\n        sub._setSubscribeError(this._errorObjectFromMessage(message));\n    }\n};\n\ncentrifugeProto._unsubscribeResponse = function (message) {\n    var uid = message.uid;\n    var body = message.body;\n    var channel = body.channel;\n\n    var sub = this._getSub(channel);\n    if (!sub) {\n        return;\n    }\n\n    if (!errorExists(message)) {\n        if (!uid) {\n            // unsubscribe command from server\n            sub._setUnsubscribed(true);\n        }\n        // ignore client initiated successful unsubscribe responses as we\n        // already unsubscribed on client level.\n    } else {\n        this.trigger('error', [{\n            message: message\n        }]);\n    }\n};\n\ncentrifugeProto._publishResponse = function (message) {\n    var uid = message.uid;\n    var body = message.body;\n    if (!(uid in this._callbacks)) {\n        return;\n    }\n    var callbacks = this._callbacks[uid];\n    delete this._callbacks[uid];\n    if (!errorExists(message)) {\n        var callback = callbacks.callback;\n        if (!callback) {\n            return;\n        }\n        callback(body);\n    } else {\n        var errback = callbacks.errback;\n        if (!errback) {\n            return;\n        }\n        errback(this._errorObjectFromMessage(message));\n        this.trigger('error', [{\n            message: message\n        }]);\n    }\n};\n\ncentrifugeProto._presenceResponse = function (message) {\n    var uid = message.uid;\n    var body = message.body;\n    if (!(uid in this._callbacks)) {\n        return;\n    }\n    var callbacks = this._callbacks[uid];\n    delete this._callbacks[uid];\n    if (!errorExists(message)) {\n        var callback = callbacks.callback;\n        if (!callback) {\n            return;\n        }\n        callback(body);\n    } else {\n        var errback = callbacks.errback;\n        if (!errback) {\n            return;\n        }\n        errback(this._errorObjectFromMessage(message));\n        this.trigger('error', [{\n            message: message\n        }]);\n    }\n};\n\ncentrifugeProto._historyResponse = function (message) {\n    var uid = message.uid;\n    var body = message.body;\n    if (!(uid in this._callbacks)) {\n        return;\n    }\n    var callbacks = this._callbacks[uid];\n    delete this._callbacks[uid];\n    if (!errorExists(message)) {\n        var callback = callbacks.callback;\n        if (!callback) {\n            return;\n        }\n        callback(body);\n    } else {\n        var errback = callbacks.errback;\n        if (!errback) {\n            return;\n        }\n        errback(this._errorObjectFromMessage(message));\n        this.trigger('error', [{\n            message: message\n        }]);\n    }\n};\n\ncentrifugeProto._joinResponse = function (message) {\n    var body = message.body;\n    var channel = body.channel;\n\n    var sub = this._getSub(channel);\n    if (!sub) {\n        return;\n    }\n    sub.trigger('join', [body]);\n};\n\ncentrifugeProto._leaveResponse = function (message) {\n    var body = message.body;\n    var channel = body.channel;\n\n    var sub = this._getSub(channel);\n    if (!sub) {\n        return;\n    }\n    sub.trigger('leave', [body]);\n};\n\ncentrifugeProto._messageResponse = function (message) {\n    var body = message.body;\n    var channel = body.channel;\n\n    // keep last uid received from channel.\n    this._lastMessageID[channel] = body.uid;\n\n    var sub = this._getSub(channel);\n    if (!sub) {\n        return;\n    }\n    sub.trigger('message', [body]);\n};\n\ncentrifugeProto._refreshResponse = function (message) {\n    if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n    }\n    if (!errorExists(message)) {\n        if (message.body.expires) {\n            var self = this;\n            var isExpired = message.body.expired;\n            if (isExpired) {\n                self._refreshTimeout = setTimeout(function () {\n                    self._refresh.call(self);\n                }, self._config.refreshInterval + Math.round(Math.random() * 1000));\n                return;\n            }\n            this._clientID = message.body.client;\n            self._refreshTimeout = setTimeout(function () {\n                self._refresh.call(self);\n            }, message.body.ttl * 1000);\n        }\n    } else {\n        this.trigger('error', [{\n            message: message\n        }]);\n    }\n};\n\ncentrifugeProto._dispatchMessage = function (message) {\n    if (message === undefined || message === null) {\n        this._debug('dispatch: got undefined or null message');\n        return;\n    }\n\n    var method = message.method;\n\n    if (!method) {\n        this._debug('dispatch: got message with empty method');\n        return;\n    }\n\n    switch (method) {\n        case 'connect':\n            this._connectResponse(message);\n            break;\n        case 'disconnect':\n            this._disconnectResponse(message);\n            break;\n        case 'subscribe':\n            this._subscribeResponse(message);\n            break;\n        case 'unsubscribe':\n            this._unsubscribeResponse(message);\n            break;\n        case 'publish':\n            this._publishResponse(message);\n            break;\n        case 'presence':\n            this._presenceResponse(message);\n            break;\n        case 'history':\n            this._historyResponse(message);\n            break;\n        case 'join':\n            this._joinResponse(message);\n            break;\n        case 'leave':\n            this._leaveResponse(message);\n            break;\n        case 'ping':\n            break;\n        case 'refresh':\n            this._refreshResponse(message);\n            break;\n        case 'message':\n            this._messageResponse(message);\n            break;\n        default:\n            this._debug('dispatch: got message with unknown method' + method);\n            break;\n    }\n};\n\ncentrifugeProto._receive = function (data) {\n    if (isArray(data)) {\n        // array of responses received\n        for (var i in data) {\n            if (data.hasOwnProperty(i)) {\n                this._dispatchMessage(data[i]);\n            }\n        }\n    } else if (Object.prototype.toString.call(data) === Object.prototype.toString.call({})) {\n        // one response received\n        this._dispatchMessage(data);\n    }\n};\n\ncentrifugeProto._flush = function () {\n    var messages = this._messages.slice(0);\n    this._messages = [];\n    this._send(messages);\n};\n\ncentrifugeProto._ping = function () {\n    this._addMessage({\n        method: 'ping'\n    });\n};\n\ncentrifugeProto._recover = function (channel) {\n    return channel in this._lastMessageID;\n};\n\ncentrifugeProto._getLastID = function (channel) {\n    var lastUID = this._lastMessageID[channel];\n    if (lastUID) {\n        this._debug('last uid found and sent for channel', channel);\n        return lastUID;\n    } else {\n        this._debug('no last uid found for channel', channel);\n        return '';\n    }\n};\n\ncentrifugeProto._createErrorObject = function (err, advice) {\n    var errObject = {\n        error: err\n    };\n    if (advice) {\n        errObject.advice = advice;\n    }\n    return errObject;\n};\n\ncentrifugeProto._errorObjectFromMessage = function (message) {\n    return this._createErrorObject(message.error, message.advice);\n};\n\ncentrifugeProto._registerCall = function (uid, callback, errback) {\n    var self = this;\n    this._callbacks[uid] = {\n        callback: callback,\n        errback: errback\n    };\n    setTimeout(function () {\n        delete self._callbacks[uid];\n        if (isFunction(errback)) {\n            errback(self._createErrorObject('timeout', 'retry'));\n        }\n    }, this._config.timeout);\n};\n\ncentrifugeProto._addMessage = function (message) {\n    var uid = '' + this._nextMessageId();\n    message.uid = uid;\n    if (this._isBatching === true) {\n        this._messages.push(message);\n    } else {\n        this._send([message]);\n    }\n    return uid;\n};\n\ncentrifugeProto.getClientId = function () {\n    return this._clientID;\n};\n\ncentrifugeProto.isConnected = centrifugeProto._isConnected;\n\ncentrifugeProto.isDisconnected = centrifugeProto._isDisconnected;\n\ncentrifugeProto.configure = function (configuration) {\n    this._configure.call(this, configuration);\n};\n\ncentrifugeProto.connect = centrifugeProto._connect;\n\ncentrifugeProto.disconnect = function () {\n    this._disconnect('client', false);\n};\n\ncentrifugeProto.ping = centrifugeProto._ping;\n\ncentrifugeProto.startBatching = function () {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n};\n\ncentrifugeProto.stopBatching = function (flush) {\n    // stop collecting messages\n    flush = flush || false;\n    this._isBatching = false;\n    if (flush === true) {\n        this.flush();\n    }\n};\n\ncentrifugeProto.flush = function () {\n    // send batched messages to Centrifuge\n    this._flush();\n};\n\ncentrifugeProto.startAuthBatching = function () {\n    // start collecting private channels to create bulk authentication\n    // request to authEndpoint when stopAuthBatching will be called\n    this._isAuthBatching = true;\n};\n\ncentrifugeProto.stopAuthBatching = function () {\n    var i,\n        channel;\n\n    // create request to authEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isAuthBatching = false;\n    var authChannels = this._authChannels;\n    this._authChannels = {};\n    var channels = [];\n\n    for (channel in authChannels) {\n        if (authChannels.hasOwnProperty(channel)) {\n            var sub = this._getSub(channel);\n            if (!sub) {\n                continue;\n            }\n            channels.push(channel);\n        }\n    }\n\n    if (channels.length === 0) {\n        return;\n    }\n\n    var data = {\n        client: this.getClientId(),\n        channels: channels\n    };\n\n    var self = this;\n\n    var cb = function (error, data) {\n        if (error === true) {\n            self._debug('authorization request failed');\n            for (i in channels) {\n                if (channels.hasOwnProperty(i)) {\n                    channel = channels[i];\n                    self._subscribeResponse({\n                        error: 'authorization request failed',\n                        advice: 'fix',\n                        body: {\n                            channel: channel\n                        }\n                    });\n                }\n            }\n            return;\n        }\n\n        var channelsData;\n        if (data.channels && isArray(data.channels)) {\n            // data is object with top level key channels containing array of channel data.\n            // TODO: make this default format in v2. \n            channelsData = {};\n            for (i in data.channels) {\n                var channelData = data.channels[i];\n                if (!channelData.channel) {\n                    continue;\n                }\n                channelsData[channelData.channel] = channelData;\n            }\n        } else {\n            channelsData = data; // data is map of channels.\n        }\n\n        // try to send all subscriptions in one request.\n        var batch = false;\n        if (!self._isBatching) {\n            self.startBatching();\n            batch = true;\n        }\n\n        for (i in channels) {\n            if (channels.hasOwnProperty(i)) {\n                channel = channels[i];\n                var channelResponse = channelsData[channel];\n                if (!channelResponse) {\n                    // subscription:error\n                    self._subscribeResponse({\n                        error: 'channel not found in authorization response',\n                        advice: 'fix',\n                        body: {\n                            channel: channel\n                        }\n                    });\n                    continue;\n                }\n                if (!channelResponse.status || channelResponse.status === 200) {\n                    var msg = {\n                        method: 'subscribe',\n                        params: {\n                            channel: channel,\n                            client: self.getClientId(),\n                            info: channelResponse.info,\n                            sign: channelResponse.sign\n                        }\n                    };\n                    var recover = self._recover(channel);\n                    if (recover === true) {\n                        msg.params.recover = true;\n                        msg.params.last = self._getLastID(channel);\n                    }\n                    self._addMessage(msg);\n                } else {\n                    self._subscribeResponse({\n                        error: channelResponse.status,\n                        body: {\n                            channel: channel\n                        }\n                    });\n                }\n            }\n        }\n\n        if (batch) {\n            self.stopBatching(true);\n        }\n\n    };\n\n    if (this._config.onPrivateChannelAuth !== null) {\n        this._config.onPrivateChannelAuth({\n            data: data\n        }, cb);\n    } else {\n        var transport = this._config.authTransport.toLowerCase();\n        if (transport === 'ajax') {\n            this._ajax(this._config.authEndpoint, this._config.authParams, this._config.authHeaders, data, cb);\n        } else if (transport === 'jsonp') {\n            this._jsonp(this._config.authEndpoint, this._config.authParams, this._config.authHeaders, data, cb);\n        } else {\n            throw 'Unknown private channel auth transport ' + transport;\n        }\n    }\n};\n\ncentrifugeProto.subscribe = function (channel, events) {\n    if (arguments.length < 1) {\n        throw 'Illegal arguments number: required 1, got ' + arguments.length;\n    }\n    if (!isString(channel)) {\n        throw 'Illegal argument type: channel must be a string';\n    }\n    if (!this._config.resubscribe && !this.isConnected()) {\n        throw 'Can not only subscribe in connected state when resubscribe option is off';\n    }\n\n    var currentSub = this._getSub(channel);\n\n    if (currentSub !== null) {\n        currentSub._setEvents(events);\n        if (currentSub._isUnsubscribed()) {\n            currentSub.subscribe();\n        }\n        return currentSub;\n    } else {\n        var sub = new Sub(this, channel, events);\n        this._subs[channel] = sub;\n        sub.subscribe();\n        return sub;\n    }\n};\n\nvar _STATE_NEW = 0;\nvar _STATE_SUBSCRIBING = 1;\nvar _STATE_SUCCESS = 2;\nvar _STATE_ERROR = 3;\nvar _STATE_UNSUBSCRIBED = 4;\n\nfunction Sub(centrifuge, channel, events) {\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._setEvents(events);\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._ready = false;\n    this._promise = null;\n    this._noResubscribe = false;\n    this._initializePromise();\n}\n\nextend(Sub, EventEmitter);\n\nvar subProto = Sub.prototype;\n\nsubProto._initializePromise = function () {\n    this._ready = false;\n    var self = this;\n    this._promise = new Promise(function (resolve, reject) {\n        self._resolve = function (value) {\n            self._ready = true;\n            resolve(value);\n        };\n        self._reject = function (err) {\n            self._ready = true;\n            reject(err);\n        };\n    });\n};\n\nsubProto._setEvents = function (events) {\n    if (!events) {\n        return;\n    }\n    if (isFunction(events)) {\n        this.on('message', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n        var knownEvents = ['message', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n        for (var i = 0, l = knownEvents.length; i < l; i++) {\n            var ev = knownEvents[i];\n            if (ev in events) {\n                this.on(ev, events[ev]);\n            }\n        }\n    }\n};\n\nsubProto._isNew = function () {\n    return this._status === _STATE_NEW;\n};\n\nsubProto._isUnsubscribed = function () {\n    return this._status === _STATE_UNSUBSCRIBED;\n};\n\nsubProto._isSubscribing = function () {\n    return this._status === _STATE_SUBSCRIBING;\n};\n\nsubProto._isReady = function () {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n};\n\nsubProto._isSuccess = function () {\n    return this._status === _STATE_SUCCESS;\n};\n\nsubProto._isError = function () {\n    return this._status === _STATE_ERROR;\n};\n\nsubProto._setNew = function () {\n    this._status = _STATE_NEW;\n};\n\nsubProto._setSubscribing = function (isResubscribe) {\n    this._isResubscribe = isResubscribe || false;\n    if (this._ready === true) {\n        // new promise for this subscription\n        this._initializePromise();\n    }\n    this._status = _STATE_SUBSCRIBING;\n};\n\nsubProto._setSubscribeSuccess = function (recovered) {\n    if (this._status === _STATE_SUCCESS) {\n        return;\n    }\n    this._status = _STATE_SUCCESS;\n    var successContext = this._getSubscribeSuccessContext(recovered);\n    this.trigger('subscribe', [successContext]);\n    this._resolve(successContext);\n};\n\nsubProto._setSubscribeError = function (err) {\n    if (this._status === _STATE_ERROR) {\n        return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    var errContext = this._getSubscribeErrorContext();\n    this.trigger('error', [errContext]);\n    this._reject(errContext);\n};\n\nsubProto._triggerUnsubscribe = function () {\n    this.trigger('unsubscribe', [{\n        channel: this.channel\n    }]);\n};\n\nsubProto._setUnsubscribed = function (noResubscribe) {\n    if (this._status === _STATE_UNSUBSCRIBED) {\n        return;\n    }\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n        this._noResubscribe = true;\n        delete this._centrifuge._lastMessageID[this.channel];\n    }\n    this._triggerUnsubscribe();\n};\n\nsubProto._shouldResubscribe = function () {\n    return !this._noResubscribe;\n};\n\nsubProto._getSubscribeSuccessContext = function (recovered) {\n    return {\n        channel: this.channel,\n        isResubscribe: this._isResubscribe,\n        recovered: recovered\n    };\n};\n\nsubProto._getSubscribeErrorContext = function () {\n    var subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n};\n\nsubProto.ready = function (callback, errback) {\n    if (this._ready) {\n        if (this._isSuccess()) {\n            callback(this._getSubscribeSuccessContext());\n        } else {\n            errback(this._getSubscribeErrorContext());\n        }\n    }\n};\n\nsubProto.subscribe = function () {\n    if (this._status === _STATE_SUCCESS) {\n        return;\n    }\n    this._noResubscribe = false;\n    this._centrifuge._subscribe(this);\n    return this;\n};\n\nsubProto.unsubscribe = function () {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n};\n\nsubProto.publish = function (data) {\n    var self = this;\n    return new Promise(function (resolve, reject) {\n        if (self._isUnsubscribed()) {\n            reject(self._centrifuge._createErrorObject('subscription unsubscribed', 'fix'));\n            return;\n        }\n        self._promise.then(function () {\n            if (!self._centrifuge.isConnected()) {\n                reject(self._centrifuge._createErrorObject('disconnected', 'retry'));\n                return;\n            }\n            var uid = self._centrifuge._addMessage({\n                method: 'publish',\n                params: {\n                    channel: self.channel,\n                    data: data\n                }\n            });\n            self._centrifuge._registerCall(uid, resolve, reject);\n        }, function (err) {\n            reject(err);\n        });\n    });\n};\n\nsubProto.presence = function () {\n    var self = this;\n    return new Promise(function (resolve, reject) {\n        if (self._isUnsubscribed()) {\n            reject(self._centrifuge._createErrorObject('subscription unsubscribed', 'fix'));\n            return;\n        }\n        self._promise.then(function () {\n            if (!self._centrifuge.isConnected()) {\n                reject(self._centrifuge._createErrorObject('disconnected', 'retry'));\n                return;\n            }\n            var uid = self._centrifuge._addMessage({\n                method: 'presence',\n                params: {\n                    channel: self.channel\n                }\n            });\n            self._centrifuge._registerCall(uid, resolve, reject);\n        }, function (err) {\n            reject(err);\n        });\n    });\n};\n\nsubProto.history = function () {\n    var self = this;\n    return new Promise(function (resolve, reject) {\n        if (self._isUnsubscribed()) {\n            reject(self._centrifuge._createErrorObject('subscription unsubscribed', 'fix'));\n            return;\n        }\n        self._promise.then(function () {\n            if (!self._centrifuge.isConnected()) {\n                reject(self._centrifuge._createErrorObject('disconnected', 'retry'));\n                return;\n            }\n            var uid = self._centrifuge._addMessage({\n                method: 'history',\n                params: {\n                    channel: self.channel\n                }\n            });\n            self._centrifuge._registerCall(uid, resolve, reject);\n        }, function (err) {\n            reject(err);\n        });\n    });\n};\n\nmodule.exports = Centrifuge;\n","/*!\n * EventEmitter v4.2.11 - git.io/ee\n * Unlicense - http://unlicense.org/\n * Oliver Caldwell - http://oli.me.uk/\n * @preserve\n */\n\n;(function () {\n    'use strict';\n\n    /**\n     * Class for managing events.\n     * Can be extended to provide event functionality in other classes.\n     *\n     * @class EventEmitter Manages event registering and emitting.\n     */\n    function EventEmitter() {}\n\n    // Shortcuts to improve speed and size\n    var proto = EventEmitter.prototype;\n    var exports = this;\n    var originalGlobalValue = exports.EventEmitter;\n\n    /**\n     * Finds the index of the listener for the event in its storage array.\n     *\n     * @param {Function[]} listeners Array of listeners to search through.\n     * @param {Function} listener Method to look for.\n     * @return {Number} Index of the specified listener, -1 if not found\n     * @api private\n     */\n    function indexOfListener(listeners, listener) {\n        var i = listeners.length;\n        while (i--) {\n            if (listeners[i].listener === listener) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Alias a method while keeping the context correct, to allow for overwriting of target method.\n     *\n     * @param {String} name The name of the target method.\n     * @return {Function} The aliased method\n     * @api private\n     */\n    function alias(name) {\n        return function aliasClosure() {\n            return this[name].apply(this, arguments);\n        };\n    }\n\n    /**\n     * Returns the listener array for the specified event.\n     * Will initialise the event object and listener arrays if required.\n     * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n     * Each property in the object response is an array of listener functions.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Function[]|Object} All listener functions for the event.\n     */\n    proto.getListeners = function getListeners(evt) {\n        var events = this._getEvents();\n        var response;\n        var key;\n\n        // Return a concatenated array of all matching events if\n        // the selector is a regular expression.\n        if (evt instanceof RegExp) {\n            response = {};\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    response[key] = events[key];\n                }\n            }\n        }\n        else {\n            response = events[evt] || (events[evt] = []);\n        }\n\n        return response;\n    };\n\n    /**\n     * Takes a list of listener objects and flattens it into a list of listener functions.\n     *\n     * @param {Object[]} listeners Raw listener objects.\n     * @return {Function[]} Just the listener functions.\n     */\n    proto.flattenListeners = function flattenListeners(listeners) {\n        var flatListeners = [];\n        var i;\n\n        for (i = 0; i < listeners.length; i += 1) {\n            flatListeners.push(listeners[i].listener);\n        }\n\n        return flatListeners;\n    };\n\n    /**\n     * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Object} All listener functions for an event in an object.\n     */\n    proto.getListenersAsObject = function getListenersAsObject(evt) {\n        var listeners = this.getListeners(evt);\n        var response;\n\n        if (listeners instanceof Array) {\n            response = {};\n            response[evt] = listeners;\n        }\n\n        return response || listeners;\n    };\n\n    /**\n     * Adds a listener function to the specified event.\n     * The listener will not be added if it is a duplicate.\n     * If the listener returns true then it will be removed after it is called.\n     * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListener = function addListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var listenerIsWrapped = typeof listener === 'object';\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n                listeners[key].push(listenerIsWrapped ? listener : {\n                    listener: listener,\n                    once: false\n                });\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of addListener\n     */\n    proto.on = alias('addListener');\n\n    /**\n     * Semi-alias of addListener. It will add a listener that will be\n     * automatically removed after its first execution.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addOnceListener = function addOnceListener(evt, listener) {\n        return this.addListener(evt, {\n            listener: listener,\n            once: true\n        });\n    };\n\n    /**\n     * Alias of addOnceListener.\n     */\n    proto.once = alias('addOnceListener');\n\n    /**\n     * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n     * You need to tell it what event names should be matched by a regex.\n     *\n     * @param {String} evt Name of the event to create.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvent = function defineEvent(evt) {\n        this.getListeners(evt);\n        return this;\n    };\n\n    /**\n     * Uses defineEvent to define multiple events.\n     *\n     * @param {String[]} evts An array of event names to define.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvents = function defineEvents(evts) {\n        for (var i = 0; i < evts.length; i += 1) {\n            this.defineEvent(evts[i]);\n        }\n        return this;\n    };\n\n    /**\n     * Removes a listener function from the specified event.\n     * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to remove the listener from.\n     * @param {Function} listener Method to remove from the event.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListener = function removeListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var index;\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key)) {\n                index = indexOfListener(listeners[key], listener);\n\n                if (index !== -1) {\n                    listeners[key].splice(index, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeListener\n     */\n    proto.off = alias('removeListener');\n\n    /**\n     * Adds listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n     * You can also pass it a regular expression to add the array of listeners to all events that match it.\n     * Yeah, this function does quite a bit. That's probably a bad thing.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListeners = function addListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(false, evt, listeners);\n    };\n\n    /**\n     * Removes listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be removed.\n     * You can also pass it a regular expression to remove the listeners from all events that match it.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListeners = function removeListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(true, evt, listeners);\n    };\n\n    /**\n     * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n     * The first argument will determine if the listeners are removed (true) or added (false).\n     * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be added/removed.\n     * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n     *\n     * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n        var i;\n        var value;\n        var single = remove ? this.removeListener : this.addListener;\n        var multiple = remove ? this.removeListeners : this.addListeners;\n\n        // If evt is an object then pass each of its properties to this method\n        if (typeof evt === 'object' && !(evt instanceof RegExp)) {\n            for (i in evt) {\n                if (evt.hasOwnProperty(i) && (value = evt[i])) {\n                    // Pass the single listener straight through to the singular method\n                    if (typeof value === 'function') {\n                        single.call(this, i, value);\n                    }\n                    else {\n                        // Otherwise pass back to the multiple function\n                        multiple.call(this, i, value);\n                    }\n                }\n            }\n        }\n        else {\n            // So evt must be a string\n            // And listeners must be an array of listeners\n            // Loop over it and pass each one to the multiple method\n            i = listeners.length;\n            while (i--) {\n                single.call(this, evt, listeners[i]);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Removes all listeners from a specified event.\n     * If you do not specify an event then all listeners will be removed.\n     * That means every event will be emptied.\n     * You can also pass a regex to remove all events that match it.\n     *\n     * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeEvent = function removeEvent(evt) {\n        var type = typeof evt;\n        var events = this._getEvents();\n        var key;\n\n        // Remove different things depending on the state of evt\n        if (type === 'string') {\n            // Remove all listeners for the specified event\n            delete events[evt];\n        }\n        else if (evt instanceof RegExp) {\n            // Remove all events matching the regex.\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    delete events[key];\n                }\n            }\n        }\n        else {\n            // Remove all listeners in all events\n            delete this._events;\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeEvent.\n     *\n     * Added to mirror the node API.\n     */\n    proto.removeAllListeners = alias('removeEvent');\n\n    /**\n     * Emits an event of your choice.\n     * When emitted, every listener attached to that event will be executed.\n     * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n     * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n     * So they will not arrive within the array on the other side, they will be separate.\n     * You can also pass a regular expression to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {Array} [args] Optional array of arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emitEvent = function emitEvent(evt, args) {\n        var listenersMap = this.getListenersAsObject(evt);\n        var listeners;\n        var listener;\n        var i;\n        var key;\n        var response;\n\n        for (key in listenersMap) {\n            if (listenersMap.hasOwnProperty(key)) {\n                listeners = listenersMap[key].slice(0);\n                i = listeners.length;\n\n                while (i--) {\n                    // If the listener returns true then it shall be removed from the event\n                    // The function is executed either with a basic call or an apply if there is an args array\n                    listener = listeners[i];\n\n                    if (listener.once === true) {\n                        this.removeListener(evt, listener.listener);\n                    }\n\n                    response = listener.listener.apply(this, args || []);\n\n                    if (response === this._getOnceReturnValue()) {\n                        this.removeListener(evt, listener.listener);\n                    }\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of emitEvent\n     */\n    proto.trigger = alias('emitEvent');\n\n    /**\n     * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n     * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {...*} Optional additional arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emit = function emit(evt) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return this.emitEvent(evt, args);\n    };\n\n    /**\n     * Sets the current value to check against when executing listeners. If a\n     * listeners return value matches the one set here then it will be removed\n     * after execution. This value defaults to true.\n     *\n     * @param {*} value The new value to check for when executing listeners.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.setOnceReturnValue = function setOnceReturnValue(value) {\n        this._onceReturnValue = value;\n        return this;\n    };\n\n    /**\n     * Fetches the current value to check against when executing listeners. If\n     * the listeners return value matches this one then it should be removed\n     * automatically. It will return true by default.\n     *\n     * @return {*|Boolean} The current value to check for or the default, true.\n     * @api private\n     */\n    proto._getOnceReturnValue = function _getOnceReturnValue() {\n        if (this.hasOwnProperty('_onceReturnValue')) {\n            return this._onceReturnValue;\n        }\n        else {\n            return true;\n        }\n    };\n\n    /**\n     * Fetches the events object and creates one if required.\n     *\n     * @return {Object} The events storage object.\n     * @api private\n     */\n    proto._getEvents = function _getEvents() {\n        return this._events || (this._events = {});\n    };\n\n    /**\n     * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n     *\n     * @return {Function} Non conflicting EventEmitter class.\n     */\n    EventEmitter.noConflict = function noConflict() {\n        exports.EventEmitter = originalGlobalValue;\n        return EventEmitter;\n    };\n\n    // Expose the class either via AMD, CommonJS or the global object\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return EventEmitter;\n        });\n    }\n    else if (typeof module === 'object' && module.exports){\n        module.exports = EventEmitter;\n    }\n    else {\n        exports.EventEmitter = EventEmitter;\n    }\n}.call(this));\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home.vue?vue&type=style&index=0&lang=less&\"","import axios from '@/libs/api.request'\n\n// 获取ktv订单\nexport const getOrderList = (params) => {\n\treturn axios.request({\n\t  url: `/order/info`,\n\t  params,\n\t  method: 'get'\n\t})\n}\n\n// 修改订单的配送状态\nexport const putOrderDeliverStatues = (data) => {\n\tlet id = data.id;\n\tdelete data.id;\n\treturn axios.request({\n\t  url: `/order/package/info/${id}`,\n\t  data,\n\t  method: 'patch'\n\t})\n}\n\n// 获取订单的详情\nexport const getOrderDetail = (id) => {\n\treturn axios.request({\n\t  url: `/order/info/${id}`,\n\t  method: 'get'\n\t})\n}","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home.vue?vue&type=style&index=1&id=6285e9c8&scoped=scoped&lang=less&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./home.vue?vue&type=style&index=1&id=6285e9c8&scoped=scoped&lang=less&\""],"sourceRoot":""}